services:
  app:
    build:
      context: .
      dockerfile: uber-jar.Dockerfile
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/tasktrackerrestapi_tests?createDatabaseIfNotExist=true
      - spring.datasource.username=postgres
      - SPRING_RABBITMQ_HOST=rabbitmq
      - spring.rabbitmq.password=guest
      - spring.rabbitmq.username=guest
      - spring.jpa.hibernate.ddl-auto=create-drop
    secrets:
      - db-password
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
  postgres:
    image: postgres:17.0
    ports:
      - "5432:5432"
      - "5671:5671"
      - "5672:5672"
    secrets:
      - db-password
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD_FILE: /run/secrets/db-password
      POSTGRES_DB: tasktrackerrestapi_tests
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    healthcheck:
      test: pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB
      interval: 10s
      timeout: 5s
      start_period: 10s
      retries: 5
  rabbitmq:
    image: rabbitmq:4.0.2
    ports:
      - "5433:5432"
    healthcheck:
      test: rabbitmq-diagnostics -q status
      interval: 10s
      timeout: 5s
      start_period: 10s
      retries: 5
  newman:
    image: postman/newman
    volumes:
      - type: bind
        source: ./postman
        target: /etc/newman
    entrypoint: [
      "newman",
      "run",
      "task-tracker-rest-api tests.postman_collection.json",
      "-e",
      "http-host.docker.internal-8080.postman_environment.json"
    ]
    depends_on:
      app:
        condition: service_healthy

volumes:
  postgres_data_tests:
  pgadmin_data_tests:
  rabbitmq_data_tests:

secrets:
  db-password:
    file: db/password.txt